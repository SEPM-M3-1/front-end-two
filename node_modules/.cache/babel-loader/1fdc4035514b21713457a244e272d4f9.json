{"ast":null,"code":"var _jsxFileName = \"/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/DashBoardM/components/PeopleList/PeopleList.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-sequences */\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport * as api from '../../../Util/api';\nimport './PeopleList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nconst PeopleList = () => {\n  _s();\n\n  const classes = useStyles();\n  const [staff, setStaff] = useState({\n    staffList: []\n  });\n  const [manager, setManager] = useState({\n    managerList: []\n  });\n\n  const getManager = async () => {\n    const type = \"manager\";\n\n    try {\n      const getAllManagerRes = await api.getAllManagers(type);\n\n      if (getAllManagerRes.status === 200) {\n        setManager({\n          staffList: getAllManagerRes.data\n        });\n      }\n    } catch (error) {\n      if (error.response.status === 404) {\n        setManager({\n          staffList: []\n        });\n      }\n    }\n\n    setManager({\n      managerList: [{\n        fullName: 'manager1',\n        email: 'manager1@gmail.com',\n        mobile: '0451172301'\n      }, {\n        fullName: 'manager2',\n        email: 'manager2@gmail.com',\n        mobile: '0451172301'\n      }]\n    });\n  };\n\n  const getStaff = async () => {\n    const type = \"staff\";\n\n    try {\n      const getAllStaffRes = await api.getAllStaffs(type);\n\n      if (getAllStaffRes.status === 200) {\n        setManager({\n          staffList: getAllStaffRes.data\n        });\n      }\n    } catch (error) {}\n\n    setStaff({\n      staffList: [{\n        fullName: 'staff1',\n        limitHours: \"40\",\n        email: 'staff1@gmail.com',\n        mobile: '0451172301',\n        address: '102 box st'\n      }, {\n        fullName: 'staff2',\n        limitHours: \"40\",\n        email: 'staff2@gmail.com',\n        mobile: '0451172301',\n        address: '102 box st'\n      }]\n    });\n  };\n\n  useEffect(() => {\n    getManager(), getStaff();\n  }, []);\n  const {\n    staffList\n  } = staff;\n  const {\n    managerList\n  } = manager;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: managerList.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.mobile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, row.fullName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Staff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Limit Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Home Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: staffList.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.limitHours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.mobile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, row.fullName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PeopleList, \"efybpoPMkItorh3MiXtVvs1gOnQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = PeopleList;\nexport default PeopleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"sources":["/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/DashBoardM/components/PeopleList/PeopleList.js"],"names":["React","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Paper","api","useStyles","table","minWidth","PeopleList","classes","staff","setStaff","staffList","manager","setManager","managerList","getManager","type","getAllManagerRes","getAllManagers","status","data","error","response","fullName","email","mobile","getStaff","getAllStaffRes","getAllStaffs","limitHours","address","map","row"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,mBAArB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAC;AAC3BW,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AADoB,CAAD,CAA5B;;AAMA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC;AACjCmB,IAAAA,SAAS,EAAE;AADsB,GAAD,CAAlC;AAIA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC;AACrCsB,IAAAA,WAAW,EAAE;AADwB,GAAD,CAAtC;;AAIF,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,IAAI,GAAG,SAAb;;AACA,QAAI;AACF,YAAMC,gBAAgB,GAAG,MAAMd,GAAG,CAACe,cAAJ,CAAmBF,IAAnB,CAA/B;;AACA,UAAIC,gBAAgB,CAACE,MAAjB,KAA4B,GAAhC,EAAqC;AACnCN,QAAAA,UAAU,CAAC;AACTF,UAAAA,SAAS,EAAEM,gBAAgB,CAACG;AADnB,SAAD,CAAV;AAGD;AACF,KAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAIA,KAAK,CAACC,QAAN,CAAeH,MAAf,KAA0B,GAA9B,EAAmC;AACjCN,QAAAA,UAAU,CAAC;AACTF,UAAAA,SAAS,EAAE;AADF,SAAD,CAAV;AAGD;AACF;;AACCE,IAAAA,UAAU,CAAC;AACTC,MAAAA,WAAW,EAAE,CAAC;AACZS,QAAAA,QAAQ,EAAE,UADE;AAEZC,QAAAA,KAAK,EAAE,oBAFK;AAGZC,QAAAA,MAAM,EAAE;AAHI,OAAD,EAIV;AACDF,QAAAA,QAAQ,EAAE,UADT;AAEDC,QAAAA,KAAK,EAAE,oBAFN;AAGDC,QAAAA,MAAM,EAAE;AAHP,OAJU;AADJ,KAAD,CAAV;AAWD,GA3BH;;AA6BA,QAAMC,QAAQ,GAAG,YAAY;AAC3B,UAAMV,IAAI,GAAG,OAAb;;AACA,QAAI;AACF,YAAMW,cAAc,GAAG,MAAMxB,GAAG,CAACyB,YAAJ,CAAiBZ,IAAjB,CAA7B;;AACA,UAAIW,cAAc,CAACR,MAAf,KAA0B,GAA9B,EAAmC;AACjCN,QAAAA,UAAU,CAAC;AACTF,UAAAA,SAAS,EAAEgB,cAAc,CAACP;AADjB,SAAD,CAAV;AAGD;AACF,KAPD,CAOE,OAAOC,KAAP,EAAc,CAEf;;AACCX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,SAAS,EAAE,CAAC;AACVY,QAAAA,QAAQ,EAAE,QADA;AAEVM,QAAAA,UAAU,EAAE,IAFF;AAGVL,QAAAA,KAAK,EAAE,kBAHG;AAIVC,QAAAA,MAAM,EAAE,YAJE;AAKVK,QAAAA,OAAO,EAAE;AALC,OAAD,EAMR;AACDP,QAAAA,QAAQ,EAAE,QADT;AAEDM,QAAAA,UAAU,EAAE,IAFX;AAGDL,QAAAA,KAAK,EAAE,kBAHN;AAIDC,QAAAA,MAAM,EAAE,YAJP;AAKDK,QAAAA,OAAO,EAAE;AALR,OANQ;AADJ,KAAD,CAAR;AAeD,GA3BH;;AA6BErC,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,UAAU,IACVW,QAAQ,EADR;AAED,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAM;AAAEf,IAAAA;AAAF,MAAgBF,KAAtB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAkBF,OAAxB;AAGF,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEV,KAA3B;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEM,OAAO,CAACH,KAA1B;AAAiC,sBAAW,cAA5C;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,SAAD;AAAA,oBACGS,WAAW,CAACiB,GAAZ,CAAiBC,GAAD,iBACf,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,IAArB;AAA0B,cAAA,KAAK,EAAC,KAAhC;AAAA,wBACGA,GAAG,CAACT;AADP;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA,wBAA0BS,GAAG,CAACR;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA,wBAA0BQ,GAAG,CAACP;AAA9B;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA,aAAeO,GAAG,CAACT,QAAnB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFA,eAwBE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF,eAyBA,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAErB,KAA3B;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEM,OAAO,CAACH,KAA1B;AAAiC,sBAAW,cAA5C;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,SAAD;AAAA,oBACGM,SAAS,CAACoB,GAAV,CAAeC,GAAD,iBACb,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,IAArB;AAA0B,cAAA,KAAK,EAAC,KAAhC;AAAA,wBACGA,GAAG,CAACT;AADP;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA,wBAA0BS,GAAG,CAACH;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA,wBAA0BG,GAAG,CAACR;AAA9B;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA,wBAA0BQ,GAAG,CAACP;AAA9B;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA,wBAA0BO,GAAG,CAACF;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA,aAAeE,GAAG,CAACT,QAAnB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAzBA;AAAA,kBADF;AA4DD,CA1ID;;GAAMhB,U;UACcH,S;;;KADdG,U;AA4IN,eAAeA,UAAf","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-sequences */\nimport React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport * as api from '../../../Util/api';\nimport './PeopleList.css'\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst PeopleList = () => {\n    const classes = useStyles();\n\n    const [staff, setStaff] = useState({\n      staffList: []\n    });\n\n    const [manager, setManager] = useState({\n      managerList: []\n    });\n  \n  const getManager = async () => {\n    const type = \"manager\";\n    try {\n      const getAllManagerRes = await api.getAllManagers(type);\n      if (getAllManagerRes.status === 200) {\n        setManager({\n          staffList: getAllManagerRes.data\n        })\n      }\n    } catch (error) {\n      if (error.response.status === 404) {\n        setManager({\n          staffList: []\n        })\n      }\n    }\n      setManager({\n        managerList: [{\n          fullName: 'manager1',\n          email: 'manager1@gmail.com',\n          mobile: '0451172301'\n        }, {\n          fullName: 'manager2',\n          email: 'manager2@gmail.com',\n          mobile: '0451172301'\n        }]\n      })\n    }\n\n  const getStaff = async () => {\n    const type = \"staff\";\n    try {\n      const getAllStaffRes = await api.getAllStaffs(type);\n      if (getAllStaffRes.status === 200) {\n        setManager({\n          staffList: getAllStaffRes.data\n        })\n      }\n    } catch (error) {\n      \n    }\n      setStaff({\n        staffList: [{\n          fullName: 'staff1',\n          limitHours: \"40\",\n          email: 'staff1@gmail.com',\n          mobile: '0451172301',\n          address: '102 box st'\n        }, {\n          fullName: 'staff2',\n          limitHours: \"40\",\n          email: 'staff2@gmail.com',\n          mobile: '0451172301',\n          address: '102 box st'\n        }]\n      })\n    }\n  \n    useEffect(() => {\n      getManager(),\n      getStaff()\n    }, [])\n  \n    const { staffList } = staff;\n    const { managerList } = manager;\n\n\n  return (\n    <>\n    <div className=\"title\">Manager</div>\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Full Name</TableCell>\n            <TableCell align=\"right\">Email</TableCell>\n            <TableCell align=\"right\">Mobile Number</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {managerList.map((row) => (\n            <TableRow key={row.fullName}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.fullName}\n              </TableCell>\n              <TableCell align=\"right\">{row.email}</TableCell>\n              <TableCell align=\"right\">{row.mobile}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </TableContainer>\n      <div className=\"title\">Staff</div>\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Full Name</TableCell>\n            <TableCell align=\"right\">Limit Hours</TableCell>\n            <TableCell align=\"right\">Email</TableCell>\n            <TableCell align=\"right\">Phone Number</TableCell>\n            <TableCell align=\"right\">Home Address</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {staffList.map((row) => (\n            <TableRow key={row.fullName}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.fullName}\n              </TableCell>\n              <TableCell align=\"right\">{row.limitHours}</TableCell>\n              <TableCell align=\"right\">{row.email}</TableCell>\n              <TableCell align=\"right\">{row.mobile}</TableCell>\n              <TableCell align=\"right\">{row.address}</TableCell>\n              <TableCell align=\"right\">\n                <Button variant=\"contained\" color=\"primary\">\n                  Edit\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </TableContainer>\n      </>\n  );\n}\n\nexport default PeopleList;\n"]},"metadata":{},"sourceType":"module"}