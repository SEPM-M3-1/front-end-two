{"ast":null,"code":"var _jsxFileName = \"/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/DashBoardS/components/NotificationS/NotificationS.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as api from '../../../Util/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nconst NotificationS = () => {\n  _s();\n\n  const classes = useStyles();\n  const [message, setMessage] = useState({\n    list: []\n  });\n\n  const getNotification = async () => {\n    const email = localStorage.getItem(\"email\");\n    setMessage({\n      list: [{\n        fullName: 'Plus',\n        date: '2020/05/12'\n      }, {\n        fullName: 'Plus',\n        date: '2020/05/15'\n      }]\n    }); // const notifyRes = await api.getNotification(email);\n    // try {\n    //   if (notifyRes.status === 200) {\n    //     setMessage({\n    //       list: notifyRes.data,\n    //     })\n    //   }\n    // } catch (error) {\n    //   if (error.response.status === 404) {\n    //     setMessage({\n    //       list:[],\n    //     })\n    //   }\n    // }\n  };\n\n  useEffect(() => {\n    getNotification();\n  }, []);\n\n  const handleAccept = () => {};\n\n  const handleRefuse = () => {};\n\n  const {\n    list\n  } = message;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-display\",\n    children: list.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hi \", result.fullName, \", I plan to arrange your shift in \", result.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Refuse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotificationS, \"7brP1aURZeXVqcz3mLlKFKu+IEw=\", false, function () {\n  return [useStyles];\n});\n\n_c = NotificationS;\nexport default NotificationS;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationS\");","map":{"version":3,"sources":["/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/DashBoardS/components/NotificationS/NotificationS.js"],"names":["React","useState","useEffect","Button","makeStyles","api","useStyles","theme","root","margin","spacing","NotificationS","classes","message","setMessage","list","getNotification","email","localStorage","getItem","fullName","date","handleAccept","handleRefuse","map","result","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,mBAArB;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADD;AADL;AADiC,CAAZ,CAAD,CAA5B;;AAQA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAGA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC;AACrCc,IAAAA,IAAI,EAAE;AAD+B,GAAD,CAAtC;;AAIA,QAAMC,eAAe,GAAG,YAAY;AAClC,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAL,IAAAA,UAAU,CAAC;AACTC,MAAAA,IAAI,EAAE,CAAC;AACLK,QAAAA,QAAQ,EAAE,MADL;AAELC,QAAAA,IAAI,EAAC;AAFA,OAAD,EAGJ;AACAD,QAAAA,QAAQ,EAAE,MADV;AAEAC,QAAAA,IAAI,EAAC;AAFL,OAHI;AADG,KAAD,CAAV,CAFkC,CAYlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA1BD;;AA4BAnB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMM,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,QAAM;AAAER,IAAAA;AAAF,MAAWF,OAAjB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACGE,IAAI,CAACS,GAAL,CAAS,CAACC,MAAD,EAASC,KAAT,kBACR;AAAA,8BACE;AAAA,0BAAOD,MAAM,CAACL,QAAd,wCAA0DK,MAAM,CAACJ,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAET,OAAO,CAACJ,IAAxB;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAS,UAAA,OAAO,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA/DD;;GAAMG,a;UACYL,S;;;KADZK,a;AAiEN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as api from '../../../Util/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst NotificationS = () => {\n  const classes = useStyles();\n\n  \n  const [message, setMessage] = useState({\n    list: []\n  })\n\n  const getNotification = async () => {\n    const email = localStorage.getItem(\"email\");\n    setMessage({\n      list: [{\n        fullName: 'Plus',\n        date:'2020/05/12',\n      },{\n        fullName: 'Plus',\n        date:'2020/05/15',\n      }\n      ]\n    })\n    // const notifyRes = await api.getNotification(email);\n    // try {\n    //   if (notifyRes.status === 200) {\n    //     setMessage({\n    //       list: notifyRes.data,\n    //     })\n    //   }\n    // } catch (error) {\n    //   if (error.response.status === 404) {\n    //     setMessage({\n    //       list:[],\n    //     })\n    //   }\n    // }\n  }\n\n  useEffect(() => {\n    getNotification()\n  }, [])\n\n  const handleAccept = () => {\n\n  }\n\n  const handleRefuse = () => {\n\n  }\n  \n  const { list } = message;\n\n  return (\n    <div className=\"message-display\">\n      {list.map((result, index) => (\n        <div>\n          <p>Hi {result.fullName}, I plan to arrange your shift in {result.date}</p>\n          <div className={classes.root}>\n            <Button variant=\"contained\" color=\"primary\">Accept</Button>\n            <Button  variant=\"contained\">Refuse</Button>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default NotificationS;\n"]},"metadata":{},"sourceType":"module"}