{"ast":null,"code":"var _jsxFileName = \"/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/DashBoardM/components/ProfileM/ProfileM.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as api from \"../../../Util/api\";\nimport * as Yup from \"yup\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./ProfileM.css\";\nimport ResetPassword from \"./ResetPassword\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileM = () => {\n  _s();\n\n  const [mProfile, setMProfile] = useState({\n    fullName: \" \",\n    phone: \" \",\n    email: \"\"\n  });\n  const [warning, setWarning] = useState({\n    show: false,\n    info: \"\"\n  });\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\n  useEffect(() => {\n    getMprofile();\n  }, []);\n\n  const getMprofile = async () => {\n    const email = localStorage.getItem(\"email\"); // try {\n    //   const getMprofileResponse = await api.fetchManagerProfileByEmail({\n    //     email,\n    //   });\n    //   if (getMprofileResponse.status === 200) {\n    //     setMProfile({\n    //       fullName: getMprofileResponse.data.fullName,\n    //       phone: getMprofileResponse.data.phone,\n    //       email: getMprofileResponse.data.email,\n    //     });\n    //     console.log(getMprofileResponse.data);\n    //   }\n    //   console.log(mProfile);\n    // } catch (error) {\n    //   setWarning({\n    //     show: true,\n    //     info: \"Get the Init Data Failed!\",\n    //   });\n    // }\n  };\n\n  const onclick = () => {\n    setShowPasswordForm(!showPasswordForm);\n  };\n\n  const handleSubmit = async ({\n    fullName,\n    phone,\n    email\n  }) => {\n    console.log(fullName, phone, email);\n    const id = localStorage.getItem(\"id\"); // try {\n    //   const mprofileResponse = await api.changeManagerProfile({\n    //     id,\n    //     fullName,\n    //     phone,\n    //     email,\n    //   });\n    //   if (mprofileResponse.status === 200) {\n    //     setMProfile({\n    //       fullName: mprofileResponse.data.fullName,\n    //       phoneNum: mprofileResponse.data.phoneNum,\n    //       email: mprofileResponse.data.email,\n    //     });\n    //     setWarning({\n    //       show: true,\n    //       info: \"Change Profile Successfully!\",\n    //     });\n    //   }\n    // } catch (error) {\n    //   setWarning({\n    //     show: true,\n    //     info: \"Change Profile Failed\",\n    //   });\n    // }\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Please enter valid email\").required(\"Email Required!\"),\n    password: Yup.string().required(\"Password Required!\"),\n    oldPassword: Yup.string().required()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          display: \"block\"\n        },\n        children: \"Your Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), warning.show ? /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: warning.info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Formik, {\n        enableReinitialize: true,\n        initialValues: mProfile,\n        onSubmit: handleSubmit,\n        validationSchema: validationSchema,\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fullName\",\n            style: {\n              display: \"block\"\n            },\n            className: \"itemLabel\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            label: \"fullName\",\n            name: \"fullName\",\n            id: \"fullName\",\n            autoFocus: true,\n            autoComplete: \"fullName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"fullName\",\n            children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            style: {\n              display: \"block\"\n            },\n            className: \"itemLabel\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            label: \"email\",\n            id: \"email\",\n            type: \"email\",\n            name: \"email\",\n            autoComplete: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error\",\n                children: msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            style: {\n              display: \"block\"\n            },\n            className: \"itemLabel\",\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            label: \"phone\",\n            id: \"phone\",\n            type: \"phone\",\n            name: \"phone\",\n            autoComplete: \"phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"phone\",\n              children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error\",\n                children: msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"itemLabel\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              children: \"Comfirm Change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), \")}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), !showPasswordForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resetPasswordButton\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onclick,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this) : null, showPasswordForm ? /*#__PURE__*/_jsxDEV(ResetPassword, {\n      onClick: onclick,\n      showPasswordForm: showPasswordForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileM, \"d5LFJ/OfCwhuHNoj78Uk56NmTFU=\");\n\n_c = ProfileM;\nexport default ProfileM;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileM\");","map":{"version":3,"sources":["/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/DashBoardM/components/ProfileM/ProfileM.js"],"names":["React","useState","useEffect","Formik","Field","ErrorMessage","Form","api","Yup","Button","ResetPassword","ProfileM","mProfile","setMProfile","fullName","phone","email","warning","setWarning","show","info","showPasswordForm","setShowPasswordForm","getMprofile","localStorage","getItem","onclick","handleSubmit","console","log","id","validationSchema","object","shape","string","required","password","oldPassword","display","color","msg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,YAAxB,EAAsCC,IAAtC,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,mBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,gBAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AACvCa,IAAAA,QAAQ,EAAE,GAD6B;AAEvCC,IAAAA,KAAK,EAAE,GAFgC;AAGvCC,IAAAA,KAAK,EAAE;AAHgC,GAAD,CAAxC;AAMA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC;AACrCkB,IAAAA,IAAI,EAAE,KAD+B;AAErCC,IAAAA,IAAI,EAAE;AAF+B,GAAD,CAAtC;AAKA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC,KAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAY;AAC9B,UAAMP,KAAK,GAAGQ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAD8B,CAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GArBD;;AAuBA,QAAMC,OAAO,GAAG,MAAM;AACpBJ,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACD,GAFD;;AAIA,QAAMM,YAAY,GAAG,OAAO;AAAEb,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAAP,KAAsC;AACzDY,IAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ,EAAsBC,KAAtB,EAA6BC,KAA7B;AACA,UAAMc,EAAE,GAAGN,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAX,CAFyD,CAGzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA3BD;;AA6BA,QAAMM,gBAAgB,GAAGvB,GAAG,CAACwB,MAAJ,GAAaC,KAAb,CAAmB;AAC1CjB,IAAAA,KAAK,EAAER,GAAG,CAAC0B,MAAJ,GACJlB,KADI,CACE,0BADF,EAEJmB,QAFI,CAEK,iBAFL,CADmC;AAI1CC,IAAAA,QAAQ,EAAE5B,GAAG,CAAC0B,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,CAJgC;AAK1CE,IAAAA,WAAW,EAAE7B,GAAG,CAAC0B,MAAJ,GAAaC,QAAb;AAL6B,GAAnB,CAAzB;AAQA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGrB,OAAO,CAACE,IAAR,gBACC;AAAM,QAAA,KAAK,EAAE;AAAEoB,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA,kBAAgCtB,OAAO,CAACG;AAAxC;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,IAJN,eAKE,QAAC,MAAD;AACE,QAAA,kBAAkB,MADpB;AAEE,QAAA,aAAa,EAAER,QAFjB;AAGE,QAAA,QAAQ,EAAEe,YAHZ;AAIE,QAAA,gBAAgB,EAAEI,gBAJpB;AAAA,gCAOI,QAAC,IAAD;AAAA,kCACE;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,KAAK,EAAE;AAAEO,cAAAA,OAAO,EAAE;AAAX,aAFT;AAGE,YAAA,SAAS,EAAC,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,KAAD;AACE,YAAA,KAAK,EAAC,UADR;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,EAAE,EAAC,UAHL;AAIE,YAAA,SAAS,MAJX;AAKE,YAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,kBARF,eAeE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,UAAnB;AAAA,sBACIE,GAAD,iBAAS;AAAM,cAAA,SAAS,EAAC,OAAhB;AAAA,wBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,kBAfF,eAmBE;AACE,YAAA,OAAO,EAAC,OADV;AAEE,YAAA,KAAK,EAAE;AAAEF,cAAAA,OAAO,EAAE;AAAX,aAFT;AAGE,YAAA,SAAS,EAAC,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF,eA0BE,QAAC,KAAD;AACE,YAAA,KAAK,EAAC,OADR;AAEE,YAAA,EAAE,EAAC,OAFL;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,IAAI,EAAC,OAJP;AAKE,YAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,kBA1BF,eAiCE;AAAA,mCACE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAC,OAAnB;AAAA,wBACIE,GAAD,iBAAS;AAAM,gBAAA,SAAS,EAAC,OAAhB;AAAA,0BAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAjCF,eAuCE;AACE,YAAA,OAAO,EAAC,OADV;AAEE,YAAA,KAAK,EAAE;AAAEF,cAAAA,OAAO,EAAE;AAAX,aAFT;AAGE,YAAA,SAAS,EAAC,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvCF,eA8CE,QAAC,KAAD;AACE,YAAA,KAAK,EAAC,OADR;AAEE,YAAA,EAAE,EAAC,OAFL;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,IAAI,EAAC,OAJP;AAKE,YAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,kBA9CF,eAqDE;AAAA,mCACE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAC,OAAnB;AAAA,wBACIE,GAAD,iBAAS;AAAM,gBAAA,SAAS,EAAC,OAAhB;AAAA,0BAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBArDF,eA2DE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,WADV;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA3DF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAsFG,CAACnB,gBAAD,gBACC;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,OAAO,EAAEK,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAMG,IA5FN,EA8FGL,gBAAgB,gBACf,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEK,OAAxB;AAAiC,MAAA,gBAAgB,EAAEL;AAAnD;AAAA;AAAA;AAAA;AAAA,YADe,GAEb,IAhGN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoGD,CAtLD;;GAAMV,Q;;KAAAA,Q;AAwLN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as api from \"../../../Util/api\";\nimport * as Yup from \"yup\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./ProfileM.css\";\nimport ResetPassword from \"./ResetPassword\";\n\nconst ProfileM = () => {\n  const [mProfile, setMProfile] = useState({\n    fullName: \" \",\n    phone: \" \",\n    email: \"\",\n  });\n\n  const [warning, setWarning] = useState({\n    show: false,\n    info: \"\",\n  });\n\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\n\n  useEffect(() => {\n    getMprofile();\n  }, []);\n\n  const getMprofile = async () => {\n    const email = localStorage.getItem(\"email\");\n    // try {\n    //   const getMprofileResponse = await api.fetchManagerProfileByEmail({\n    //     email,\n    //   });\n    //   if (getMprofileResponse.status === 200) {\n    //     setMProfile({\n    //       fullName: getMprofileResponse.data.fullName,\n    //       phone: getMprofileResponse.data.phone,\n    //       email: getMprofileResponse.data.email,\n    //     });\n    //     console.log(getMprofileResponse.data);\n    //   }\n    //   console.log(mProfile);\n    // } catch (error) {\n    //   setWarning({\n    //     show: true,\n    //     info: \"Get the Init Data Failed!\",\n    //   });\n    // }\n  };\n\n  const onclick = () => {\n    setShowPasswordForm(!showPasswordForm);\n  };\n\n  const handleSubmit = async ({ fullName, phone, email }) => {\n    console.log(fullName, phone, email);\n    const id = localStorage.getItem(\"id\");\n    // try {\n    //   const mprofileResponse = await api.changeManagerProfile({\n    //     id,\n    //     fullName,\n    //     phone,\n    //     email,\n    //   });\n    //   if (mprofileResponse.status === 200) {\n    //     setMProfile({\n    //       fullName: mprofileResponse.data.fullName,\n    //       phoneNum: mprofileResponse.data.phoneNum,\n    //       email: mprofileResponse.data.email,\n    //     });\n    //     setWarning({\n    //       show: true,\n    //       info: \"Change Profile Successfully!\",\n    //     });\n    //   }\n    // } catch (error) {\n    //   setWarning({\n    //     show: true,\n    //     info: \"Change Profile Failed\",\n    //   });\n    // }\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string()\n      .email(\"Please enter valid email\")\n      .required(\"Email Required!\"),\n    password: Yup.string().required(\"Password Required!\"),\n    oldPassword: Yup.string().required(),\n  });\n\n  return (\n    <div>\n      <div className=\"profileBox\">\n        <h1 style={{ display: \"block\" }}>Your Profiles</h1>\n        {warning.show ? (\n          <span style={{ color: \"red\" }}>{warning.info}</span>\n        ) : null}\n        <Formik\n          enableReinitialize\n          initialValues={mProfile}\n          onSubmit={handleSubmit}\n          validationSchema={validationSchema}\n        >\n          {/* {({ isSubmitting }) => ( */}\n            <Form>\n              <label\n                htmlFor=\"fullName\"\n                style={{ display: \"block\" }}\n                className=\"itemLabel\"\n              >\n                Full Name\n              </label>\n              <Field\n                label=\"fullName\"\n                name=\"fullName\"\n                id=\"fullName\"\n                autoFocus\n                autoComplete=\"fullName\"\n              />\n              <ErrorMessage name=\"fullName\">\n                {(msg) => <span className=\"error\">{msg}</span>}\n              </ErrorMessage>\n\n              <label\n                htmlFor=\"email\"\n                style={{ display: \"block\" }}\n                className=\"itemLabel\"\n              >\n                Email\n              </label>\n              <Field\n                label=\"email\"\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n              <div>\n                <ErrorMessage name=\"email\">\n                  {(msg) => <span className=\"error\">{msg}</span>}\n                </ErrorMessage>\n              </div>\n\n              <label\n                htmlFor=\"phone\"\n                style={{ display: \"block\" }}\n                className=\"itemLabel\"\n              >\n                Phone Number\n              </label>\n              <Field\n                label=\"phone\"\n                id=\"phone\"\n                type=\"phone\"\n                name=\"phone\"\n                autoComplete=\"phone\"\n              />\n              <div>\n                <ErrorMessage name=\"phone\">\n                  {(msg) => <span className=\"error\">{msg}</span>}\n                </ErrorMessage>\n              </div>\n\n              <div className=\"itemLabel\">\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  Comfirm Change\n                </Button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n\n      {!showPasswordForm ? (\n        <div className=\"resetPasswordButton\">\n          <Button variant=\"contained\" color=\"primary\" onClick={onclick}>\n            Reset Password\n          </Button>\n        </div>\n      ) : null}\n\n      {showPasswordForm ? (\n        <ResetPassword onClick={onclick} showPasswordForm={showPasswordForm} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default ProfileM;\n"]},"metadata":{},"sourceType":"module"}