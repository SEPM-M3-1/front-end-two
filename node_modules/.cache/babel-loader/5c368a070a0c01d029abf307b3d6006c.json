{"ast":null,"code":"var _jsxFileName = \"/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/DashBoardM/components/PeopleList/PeopleList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport './PeopleList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n}); // function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n// const manager = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// ];\n// const staff = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// ];\n\nconst PeopleList = () => {\n  _s();\n\n  const classes = useStyles();\n  const [staff, setStaff] = useState({\n    staffList: []\n  });\n  const [manager, setManager] = useState({\n    managerList: []\n  });\n  const {\n    staffList\n  } = staff;\n  const {\n    mangerList\n  } = manager;\n\n  const getManager = async () => {\n    setManager({\n      managerList: [{\n        fullName: 'Plus',\n        email: 'plus@gmail.com',\n        mobile: '0451172301'\n      }, {\n        fullName: 'Plus',\n        email: 'plus@gmail.com',\n        mobile: '0451172301'\n      }]\n    });\n  };\n\n  const getStaff = async () => {\n    setStaff({\n      staffList: [{\n        fullName: 'Plus',\n        limitHours: \"40\",\n        email: 'plus@gmail.com',\n        mobile: '0451172301',\n        address: '102 box st'\n      }, {\n        fullName: 'Plus',\n        limitHours: \"40\",\n        email: 'plus@gmail.com',\n        mobile: '0451172301',\n        address: '102 box st'\n      }]\n    });\n  };\n\n  use;\n  useEffect(() => {\n    getManager(), getStaff();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.calories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.fat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, staffList.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Staff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Limit Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Home Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.calories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.fat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.carbs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.protein\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PeopleList, \"2ui77a9XKe2gBrOMvFHqWaad2kk=\", false, function () {\n  return [useStyles];\n});\n\n_c = PeopleList;\nexport default PeopleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"sources":["/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/DashBoardM/components/PeopleList/PeopleList.js"],"names":["React","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","PeopleList","classes","staff","setStaff","staffList","manager","setManager","managerList","mangerList","getManager","fullName","email","mobile","getStaff","limitHours","address","use","rows","map","row","name","calories","fat","carbs","protein"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport './PeopleList.css'\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n\n// const manager = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// ];\n\n// const staff = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// ];\n\nconst PeopleList = () => {\n  const classes = useStyles();\n\n  const [staff, setStaff] = useState({\n    staffList: []\n  });\n\n  const [manager, setManager] = useState({\n    managerList: []\n  });\n\n  const { staffList } = staff;\n  const { mangerList } = manager;\n  \n    const getManager = async () => {\n      setManager({\n        managerList: [{\n          fullName: 'Plus',\n          email: 'plus@gmail.com',\n          mobile: '0451172301'\n        }, {\n          fullName: 'Plus',\n          email: 'plus@gmail.com',\n          mobile: '0451172301'\n        }]\n      })\n    }\n\n    const getStaff = async () => {\n      setStaff({\n        staffList: [{\n          fullName: 'Plus',\n          limitHours: \"40\",\n          email: 'plus@gmail.com',\n          mobile: '0451172301',\n          address: '102 box st'\n        }, {\n          fullName: 'Plus',\n          limitHours: \"40\",\n          email: 'plus@gmail.com',\n          mobile: '0451172301',\n          address: '102 box st'\n        }]\n      })\n    }\nuse\n    useEffect(() => {\n      getManager(),\n      getStaff()\n    }, [])\n\n\n  return (\n    <>\n    <div className=\"title\">Manager</div>\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Full Name</TableCell>\n            <TableCell align=\"right\">Email</TableCell>\n            <TableCell align=\"right\">Mobile Number</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={staffList.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </TableContainer>\n      <div className=\"title\">Staff</div>\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Full Name</TableCell>\n            <TableCell align=\"right\">Limit Hours</TableCell>\n            <TableCell align=\"right\">Email</TableCell>\n            <TableCell align=\"right\">Phone Number</TableCell>\n            <TableCell align=\"right\">Home Address</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </TableContainer>\n      </>\n  );\n}\n\nexport default PeopleList;\n"]},"metadata":{},"sourceType":"module"}