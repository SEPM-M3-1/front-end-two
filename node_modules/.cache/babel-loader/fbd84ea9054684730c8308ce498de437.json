{"ast":null,"code":"var _jsxFileName = \"/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/DashBoardM/components/ProfileM/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport * as api from \"../../../Util/api\";\nimport * as Yup from \"yup\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./ProfileM.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = ({\n  onClick,\n  showPasswordForm\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [password, setPassword] = useState({\n    oldPassword: \"\",\n    password: \"\"\n  });\n  const [passwordWarning, setPasswordWarning] = useState({\n    show: false,\n    info: \"\"\n  });\n\n  const resetPassword = async ({\n    oldPassword,\n    password\n  }) => {\n    try {\n      const changePasswordRes = await api.ChangePassword({\n        email,\n        oldPassword,\n        password\n      });\n\n      if (changePasswordRes.status === 200) {\n        setPasswordWarning({\n          show: true,\n          info: \"Password Change Successfully!\"\n        });\n        history.push(\"/login\");\n      }\n    } catch (error) {\n      if (error.response.status === 400) {\n        setPasswordWarning({\n          show: true,\n          info: \"Password Change Failed!\"\n        });\n      }\n    }\n  };\n\n  const validationSchema = Yup.object().shape({\n    password: Yup.string().required(\"Password Required!\"),\n    oldPassword: Yup.string().required()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetBox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resetPassword\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          display: \"block\"\n        },\n        children: \"Change Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), passwordWarning.show ? /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: passwordWarning.info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: password,\n        onSubmit: resetPassword,\n        validationSchema: validationSchema,\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            style: {\n              display: \"block\"\n            },\n            className: \"itemLabel\",\n            children: \"Old Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            label: \"oldPassword\",\n            name: \"oldPassword\",\n            type: \"oldPassword\",\n            id: \"oldPassword\",\n            autoFocus: true,\n            autoComplete: \"oldPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"oldPassword\",\n              children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error\",\n                children: msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            style: {\n              display: \"block\"\n            },\n            className: \"itemLabel\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            label: \"password\",\n            name: \"password\",\n            type: \"password\",\n            id: \"password\",\n            autoFocus: true,\n            autoComplete: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error\",\n                children: msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"itemLabel\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cancelResetPasswordButton\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: onclick,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"IcwyxTRhSrfHbQsRO5PNDDf7vGA=\", false, function () {\n  return [useHistory];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/DashBoardM/components/ProfileM/ResetPassword.js"],"names":["React","useState","useEffect","Formik","Field","ErrorMessage","Form","useHistory","api","Yup","Button","ResetPassword","onClick","showPasswordForm","history","password","setPassword","oldPassword","passwordWarning","setPasswordWarning","show","info","resetPassword","changePasswordRes","ChangePassword","email","status","push","error","response","validationSchema","object","shape","string","required","display","color","isSubmitting","msg","onclick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport * as api from \"../../../Util/api\";\nimport * as Yup from \"yup\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./ProfileM.css\";\n\nconst ResetPassword = ({ onClick, showPasswordForm }) => {\n  const history = useHistory();\n\n  const [password, setPassword] = useState({\n    oldPassword: \"\",\n    password: \"\",\n  });\n\n  const [passwordWarning, setPasswordWarning] = useState({\n    show: false,\n    info: \"\",\n  });\n\n  const resetPassword = async ({ oldPassword, password }) => {\n    try {\n      const changePasswordRes = await api.ChangePassword({\n        email,\n        oldPassword,\n        password,\n      });\n\n      if (changePasswordRes.status === 200) {\n        setPasswordWarning({\n          show: true,\n          info: \"Password Change Successfully!\",\n        });\n        history.push(\"/login\");\n      }\n    } catch (error) {\n      if (error.response.status === 400) {\n        setPasswordWarning({\n          show: true,\n          info: \"Password Change Failed!\",\n        });\n      }\n    }\n  };\n\n  const validationSchema = Yup.object().shape({\n    password: Yup.string().required(\"Password Required!\"),\n    oldPassword: Yup.string().required(),\n  });\n\n  return (\n    <div className=\"resetBox\">\n      <div className=\"resetPassword\">\n        <h1 style={{ display: \"block\" }}>Change Your Password</h1>\n        {passwordWarning.show ? (\n          <span style={{ color: \"red\" }}>{passwordWarning.info}</span>\n        ) : null}\n\n        <Formik\n          initialValues={password}\n          onSubmit={resetPassword}\n          validationSchema={validationSchema}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <label\n                htmlFor=\"password\"\n                style={{ display: \"block\" }}\n                className=\"itemLabel\"\n              >\n                Old Password\n              </label>\n              <Field\n                label=\"oldPassword\"\n                name=\"oldPassword\"\n                type=\"oldPassword\"\n                id=\"oldPassword\"\n                autoFocus\n                autoComplete=\"oldPassword\"\n              />\n              <div>\n                <ErrorMessage name=\"oldPassword\">\n                  {(msg) => <span className=\"error\">{msg}</span>}\n                </ErrorMessage>\n              </div>\n\n              <label\n                htmlFor=\"password\"\n                style={{ display: \"block\" }}\n                className=\"itemLabel\"\n              >\n                New Password\n              </label>\n              <Field\n                label=\"password\"\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                autoFocus\n                autoComplete=\"password\"\n              />\n              <div>\n                <ErrorMessage name=\"password\">\n                  {(msg) => <span className=\"error\">{msg}</span>}\n                </ErrorMessage>\n              </div>\n\n              <div className=\"itemLabel\">\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Reset Password\n                </Button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n        <div className=\"cancelResetPasswordButton\">\n          <Button variant=\"contained\" color=\"primary\" onClick={onclick}>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}