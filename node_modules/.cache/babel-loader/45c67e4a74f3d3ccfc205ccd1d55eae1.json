{"ast":null,"code":"var _jsxFileName = \"/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as api from \"../Util/api\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory();\n  const [warning, setWarning] = useState(false);\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n    type: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Please enter valid email\").required(\"Email Required!\"),\n    password: Yup.string().required(\"Password Required!\")\n  });\n\n  const onSubmit = async ({\n    email,\n    password,\n    type\n  }) => {\n    localStorage.setItem(\"email\", email);\n    console.log(email, password, type);\n\n    if (type === \"staff\") {\n      history.push(\"/dashboards\");\n    }\n\n    if (type === \"manager\") {\n      history.push(\"/dashboardm\");\n    }\n\n    try {\n      const loginRes = await api.login({\n        email,\n        password,\n        type\n      });\n\n      if (loginRes.status === 200) {\n        if (type === \"staff\") {\n          history.push(\"/dashboards\");\n        }\n\n        if (type === \"manager\") {\n          history.push(\"/dashboardm\");\n        }\n      }\n    } catch (error) {\n      if (error.response.status === 400) {\n        setWarning(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login_form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        display: \"block\"\n      },\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), warning ? /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Email,password or type are not exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"selection\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: \"select\",\n          name: \"type\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Your Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"staff\",\n            children: \"Staff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"manager\",\n            children: \"Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Email\",\n          name: \"email\",\n          id: \"email\",\n          autoFocus: true,\n          autoComplete: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            style: {\n              display: \"block\"\n            },\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Password\",\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          autoComplete: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            style: {\n              display: \"block\"\n            },\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          style: {\n            display: \"block\",\n            margin: \"auto\"\n          },\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          id: \"signUpLink\",\n          className: \"link\",\n          to: \"/signupm\",\n          style: {\n            display: \"block\",\n            margin: \"auto\"\n          },\n          children: \"SignUp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"qcL9EAae0b6gyMjjNHfVoCv5ZqY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/Login/Login.js"],"names":["React","useState","Formik","Field","ErrorMessage","Form","Yup","Link","useHistory","api","Login","history","warning","setWarning","initialValues","email","password","type","validationSchema","object","shape","string","required","onSubmit","localStorage","setItem","console","log","push","loginRes","login","status","error","response","display","color","isSubmitting","msg","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as api from \"../Util/api\";\nimport \"./Login.css\";\n\nconst Login = () => {\n  const history = useHistory();\n\n  const [warning, setWarning] = useState(false);\n\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n    type: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string()\n      .email(\"Please enter valid email\")\n      .required(\"Email Required!\"),\n    password: Yup.string().required(\"Password Required!\"),\n  });\n\n  const onSubmit = async ({ email, password, type }) => {\n    localStorage.setItem(\"email\", email);\n    console.log(email, password, type);\n    if (type === \"staff\") {\n      history.push(\"/dashboards\");\n    }\n    if (type === \"manager\") {\n      history.push(\"/dashboardm\");\n    }\n    try {\n      const loginRes = await api.login({ email, password, type });\n      if (loginRes.status === 200) {\n        if (type === \"staff\") {\n          history.push(\"/dashboards\");\n        }\n        if (type === \"manager\") {\n          history.push(\"/dashboardm\");\n        }\n      }\n    } catch (error) {\n      if (error.response.status === 400) {\n        setWarning(true);\n      }\n    }\n  };\n\n  return (\n    <div className=\"login_form\">\n      <h1 style={{ display: \"block\" }}>Login</h1>\n      {warning ? (\n        <span style={{ color: \"red\" }}>\n          Email,password or type are not exist\n        </span>\n      ) : null}\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <label htmlFor=\"selection\" style={{ display: \"block\" }}>\n              Type\n            </label>\n            <Field as=\"select\" name=\"type\">\n              <option>Select Your Type</option>\n              <option value=\"staff\">Staff</option>\n              <option value=\"manager\">Manager</option>\n            </Field>\n            <label htmlFor=\"email\" style={{ display: \"block\" }}>\n              Email\n            </label>\n            <Field\n              label=\"Email\"\n              name=\"email\"\n              id=\"email\"\n              autoFocus\n              autoComplete=\"email\"\n            />\n            <ErrorMessage name=\"email\">\n              {(msg) => <span className=\"error\"style={{ display: \"block\" }} >{msg}</span>}\n            </ErrorMessage>\n            <label htmlFor=\"password\" style={{ display: \"block\" }}>\n              Password\n            </label>\n            <Field\n              label=\"Password\"\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"password\"\n            />\n            <ErrorMessage name=\"password\">\n              {(msg) => <span className=\"error\" style={{ display: \"block\" }} >{msg}</span>}\n            </ErrorMessage>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              style={{ display: \"block\", margin:\"auto\"}}\n            >\n              Sign in\n            </button>\n            <Link id=\"signUpLink\" className=\"link\" to=\"/signupm\" style={{ display: \"block\", margin:\"auto\"}}>\n              SignUp\n            </Link>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}