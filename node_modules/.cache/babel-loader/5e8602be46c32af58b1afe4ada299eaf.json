{"ast":null,"code":"var _jsxFileName = \"/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/SignUpM/SignUpM.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as api from \"../Util/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpM = () => {\n  _s();\n\n  const history = useHistory();\n  const [warning, setWarning] = useState(false);\n  const initialValues = {\n    email: \"\",\n    fullName: \"\",\n    password: \"\",\n    mobile: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Please enter valid email\").required(\"Email Required!\"),\n    fullName: Yup.string().required(\"FullName Required!\"),\n    password: Yup.string().required(\"Password Required!\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8})/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"),\n    phone: Yup.string().required(\"Mobile Required!\")\n  });\n\n  const onSubmit = async ({\n    email,\n    fullName,\n    password,\n    phone\n  }) => {\n    console.log(email, fullName, password, phone);\n\n    try {\n      const signupRes = await api.sigunm({\n        email,\n        fullName,\n        password,\n        phone\n      });\n\n      if (signupRes.status === 200) {\n        history.push(\"/login\");\n      }\n    } catch (error) {\n      if (error.response.status === 400) {\n        setWarning(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup_form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        display: \"block\"\n      },\n      children: \"Manager SignUp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), warning ? /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Email already exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Email\",\n          name: \"email\",\n          id: \"email\",\n          autoFocus: true,\n          autoComplete: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"full-name\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Full-Name\",\n          name: \"fullName\",\n          id: \"fullName\",\n          autoFocus: true,\n          autoComplete: \"fullName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"fullName\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Password\",\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          autoComplete: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mobile\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Mobile Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"mobile number\",\n          id: \"phone\",\n          type: \"phone\",\n          name: \"phone\",\n          autoComplete: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"phone\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          style: {\n            display: \"block\"\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            id: \"signUpLink\",\n            className: \"link\",\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpM, \"qcL9EAae0b6gyMjjNHfVoCv5ZqY=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUpM;\nexport default SignUpM;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpM\");","map":{"version":3,"sources":["/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/SignUpM/SignUpM.js"],"names":["React","useState","Formik","Field","ErrorMessage","Form","Yup","Link","useHistory","api","SignUpM","history","warning","setWarning","initialValues","email","fullName","password","mobile","validationSchema","object","shape","string","required","matches","phone","onSubmit","console","log","signupRes","sigunm","status","push","error","response","display","color","isSubmitting","msg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,YAAxB,EAAsCC,IAAtC,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AAEA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMa,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE,EADa;AAEpBC,IAAAA,QAAQ,EAAE,EAFU;AAGpBC,IAAAA,QAAQ,EAAE,EAHU;AAIpBC,IAAAA,MAAM,EAAE;AAJY,GAAtB;AAOA,QAAMC,gBAAgB,GAAGb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB;AAC1CN,IAAAA,KAAK,EAAET,GAAG,CAACgB,MAAJ,GACJP,KADI,CACE,0BADF,EAEJQ,QAFI,CAEK,iBAFL,CADmC;AAI1CP,IAAAA,QAAQ,EAAEV,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,CAJgC;AAK1CN,IAAAA,QAAQ,EAAEX,GAAG,CAACgB,MAAJ,GACPC,QADO,CACE,oBADF,EAEPC,OAFO,CAGN,+DAHM,EAIN,oGAJM,CALgC;AAW1CC,IAAAA,KAAK,EAAEnB,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB;AAXmC,GAAnB,CAAzB;;AAcA,QAAMG,QAAQ,GAAG,OAAO;AAAEX,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,QAAnB;AAA6BQ,IAAAA;AAA7B,GAAP,KAAgD;AAC/DE,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuCQ,KAAvC;;AACA,QAAI;AACF,YAAMI,SAAS,GAAG,MAAMpB,GAAG,CAACqB,MAAJ,CAAW;AAAEf,QAAAA,KAAF;AAASC,QAAAA,QAAT;AAAmBC,QAAAA,QAAnB;AAA6BQ,QAAAA;AAA7B,OAAX,CAAxB;;AACA,UAAII,SAAS,CAACE,MAAV,KAAqB,GAAzB,EAA8B;AAC5BpB,QAAAA,OAAO,CAACqB,IAAR,CAAa,QAAb;AACD;AACF,KALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAIA,KAAK,CAACC,QAAN,CAAeH,MAAf,KAA0B,GAA9B,EAAmC;AACjClB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF;AACF,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEsB,QAAAA,OAAO,EAAE;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGvB,OAAO,gBACN;AAAM,MAAA,KAAK,EAAE;AAAEwB,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAEJ,IAJN,eAKE,QAAC,MAAD;AACE,MAAA,aAAa,EAAEtB,aADjB;AAEE,MAAA,QAAQ,EAAEY,QAFZ;AAGE,MAAA,gBAAgB,EAAEP,gBAHpB;AAAA,gBAKG,CAAC;AAAEkB,QAAAA;AAAF,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAuB,UAAA,KAAK,EAAE;AAAEF,YAAAA,OAAO,EAAE;AAAX,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AACE,UAAA,KAAK,EAAC,OADR;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,EAAE,EAAC,OAHL;AAIE,UAAA,SAAS,MAJX;AAKE,UAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,gBAJF,eAWE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,OAAnB;AAAA,oBACIG,GAAD,iBAAS;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA,sBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,gBAXF,eAcE;AAAO,UAAA,OAAO,EAAC,WAAf;AAA2B,UAAA,KAAK,EAAE;AAAEH,YAAAA,OAAO,EAAE;AAAX,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAiBE,QAAC,KAAD;AACE,UAAA,KAAK,EAAC,WADR;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,EAAE,EAAC,UAHL;AAIE,UAAA,SAAS,MAJX;AAKE,UAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAwBE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAAA,oBACIG,GAAD,iBAAS;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA,sBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,gBAxBF,eA2BE;AAAO,UAAA,OAAO,EAAC,UAAf;AAA0B,UAAA,KAAK,EAAE;AAAEH,YAAAA,OAAO,EAAE;AAAX,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BF,eA8BE,QAAC,KAAD;AACE,UAAA,KAAK,EAAC,UADR;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,IAAI,EAAC,UAJP;AAKE,UAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,gBA9BF,eAqCE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAAA,oBACIG,GAAD,iBAAS;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA,sBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,gBArCF,eAwCE;AAAO,UAAA,OAAO,EAAC,QAAf;AAAwB,UAAA,KAAK,EAAE;AAAEH,YAAAA,OAAO,EAAE;AAAX,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxCF,eA2CE,QAAC,KAAD;AACE,UAAA,KAAK,EAAC,eADR;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,gBA3CF,eAkDE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,OAAnB;AAAA,oBACIG,GAAD,iBAAS;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA,sBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,gBAlDF,eAqDE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,QAAQ,EAAED,YAFZ;AAGE,UAAA,KAAK,EAAE;AAAEF,YAAAA,OAAO,EAAE;AAAX,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArDF,eA4DE;AAAA,iDAC2B,GAD3B,eAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,YAAT;AAAsB,YAAA,SAAS,EAAC,MAAhC;AAAuC,YAAA,EAAE,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5DF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmFD,CA3HD;;GAAMzB,O;UACYF,U;;;KADZE,O;AA6HN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as api from \"../Util/api\";\n\nconst SignUpM = () => {\n  const history = useHistory();\n\n  const [warning, setWarning] = useState(false);\n\n  const initialValues = {\n    email: \"\",\n    fullName: \"\",\n    password: \"\",\n    mobile: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string()\n      .email(\"Please enter valid email\")\n      .required(\"Email Required!\"),\n    fullName: Yup.string().required(\"FullName Required!\"),\n    password: Yup.string()\n      .required(\"Password Required!\")\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8})/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\n      ),\n    phone: Yup.string().required(\"Mobile Required!\"),\n  });\n\n  const onSubmit = async ({ email, fullName, password, phone }) => {\n    console.log(email, fullName, password, phone);\n    try {\n      const signupRes = await api.sigunm({ email, fullName, password, phone });\n      if (signupRes.status === 200) {\n        history.push(\"/login\");\n      }\n    } catch (error) {\n      if (error.response.status === 400) {\n        setWarning(true);\n      }\n    }\n  };\n\n  return (\n    <div className=\"signup_form\">\n      <h1 style={{ display: \"block\" }}>Manager SignUp</h1>\n      {warning ? (\n        <span style={{ color: \"red\" }}>Email already exist</span>\n      ) : null}\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <label htmlFor=\"email\" style={{ display: \"block\" }}>\n              Email\n            </label>\n            <Field\n              label=\"Email\"\n              name=\"email\"\n              id=\"email\"\n              autoFocus\n              autoComplete=\"email\"\n            />\n            <ErrorMessage name=\"email\">\n              {(msg) => <span className=\"error\">{msg}</span>}\n            </ErrorMessage>\n            <label htmlFor=\"full-name\" style={{ display: \"block\" }}>\n              Full Name\n            </label>\n            <Field\n              label=\"Full-Name\"\n              name=\"fullName\"\n              id=\"fullName\"\n              autoFocus\n              autoComplete=\"fullName\"\n            />\n            <ErrorMessage name=\"fullName\">\n              {(msg) => <span className=\"error\">{msg}</span>}\n            </ErrorMessage>\n            <label htmlFor=\"password\" style={{ display: \"block\" }}>\n              Password\n            </label>\n            <Field\n              label=\"Password\"\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"password\"\n            />\n            <ErrorMessage name=\"password\">\n              {(msg) => <span className=\"error\">{msg}</span>}\n            </ErrorMessage>\n            <label htmlFor=\"mobile\" style={{ display: \"block\" }}>\n              Mobile Number\n            </label>\n            <Field\n              label=\"mobile number\"\n              id=\"phone\"\n              type=\"phone\"\n              name=\"phone\"\n              autoComplete=\"phone\"\n            />\n            <ErrorMessage name=\"phone\">\n              {(msg) => <span className=\"error\">{msg}</span>}\n            </ErrorMessage>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              style={{ display: \"block\" }}\n            >\n              Sign Up\n            </button>\n            <p>\n              Already have an account?{\" \"}\n              <Link id=\"signUpLink\" className=\"link\" to=\"/login\">\n                Login\n              </Link>\n            </p>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignUpM;\n"]},"metadata":{},"sourceType":"module"}