{"ast":null,"code":"var _jsxFileName = \"/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/DashBoardM/components/PeopleList/PeopleList.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-sequences */\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as api from \"../../../Util/api\";\nimport \"./PeopleList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nconst PeopleList = () => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [hours, setHours] = useState({\n    email: \"\",\n    name: \"\",\n    newHours: \"\"\n  });\n  const [staff, setStaff] = useState({\n    staffList: []\n  });\n  const [manager, setManager] = useState({\n    managerList: []\n  });\n\n  const getManager = async () => {\n    const type = \"manager\";\n\n    try {\n      const getAllManagerRes = await api.getAllManagers(type);\n\n      if (getAllManagerRes.status === 200) {\n        setManager({\n          managerList: getAllManagerRes.data\n        });\n      }\n    } catch (error) {\n      if (error.response.status === 404) {\n        setManager({\n          managerList: []\n        });\n      }\n    } // setManager({\n    //   managerList:\n    //   [{\n    //     fullName: 'manager1',\n    //     email: 'manager1@gmail.com',\n    //     mobile: '0451172301'\n    //   }, {\n    //     fullName: 'manager2',\n    //     email: 'manager2@gmail.com',\n    //     mobile: '0451172301'\n    //   }]\n    // })\n\n  };\n\n  const getStaff = async () => {\n    const getAllStaffRes = await api.getAllStaffs();\n\n    if (getAllStaffRes.status === 200) {\n      console.log(getAllStaffRes.data);\n      setStaff({\n        staffList: getAllStaffRes.data\n      });\n    } else {\n      setStaff({\n        staffList: []\n      });\n    } //   setStaff({\n    //     staffList:\n    //     // [{\n    //     //   fullName: 'staff1',\n    //     //   limitHours: \"40\",\n    //     //   email: 'staff1@gmail.com',\n    //     //   mobile: '0451172301',\n    //     //   address: '102 box st'\n    //     // }, {\n    //     //   fullName: 'staff2',\n    //     //   limitHours: \"50\",\n    //     //   email: 'staff2@gmail.com',\n    //     //   mobile: '0451172301',\n    //     //   address: '102 box st'\n    //     // }]\n    //   })\n\n  };\n\n  useEffect(() => {\n    getManager(), getStaff();\n  }, []);\n  const {\n    staffList\n  } = staff;\n  const {\n    managerList\n  } = manager;\n\n  const handleEdit = row => {\n    const staffEmail = row.email;\n    const currentHours = row.limitHours;\n    const fullName = row.fullName;\n    setOpen(true);\n    setHours({\n      email: staffEmail,\n      name: fullName,\n      newHours: currentHours\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const initialValues = {\n    hour: \"\"\n  };\n\n  const handleChange = async ({\n    hour\n  }) => {\n    setOpen(false);\n    const email = hours.email;\n    console.log(email, hour); // try {\n    //   const changeHoursRes = await api.changeHours({ email, hour });\n    //   if (changeHoursRes.status === 200) {\n    // console.log(\"change success\");\n    //   }\n    // } catch (error) {\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: managerList.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.mobile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, row.fullName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Staff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Limit Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Home Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: staffList.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.limitHours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.mobile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleEdit(row),\n                children: \"Edit Limit Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n                open: open,\n                onClose: handleClose,\n                \"aria-labelledby\": \"form-dialog-title\",\n                children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                  id: \"form-dialog-title\",\n                  children: \"Change working Hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                  children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n                    children: [hours.name, \"'s current weekly working time is\", \" \", hours.newHours, \" hours.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                    initialValues: initialValues,\n                    onSubmit: handleChange,\n                    children: /*#__PURE__*/_jsxDEV(Form, {\n                      children: [/*#__PURE__*/_jsxDEV(Field, {\n                        as: TextField,\n                        autoFocus: true,\n                        margin: \"dense\",\n                        id: \"hour\",\n                        name: \"hour\",\n                        label: \"Limit Working Hours\",\n                        fullWidth: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          onClick: handleClose,\n                          color: \"primary\",\n                          children: \"Cancel\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 233,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          type: \"submit\",\n                          color: \"primary\",\n                          children: \"Save Change\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 236,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, row.fullName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PeopleList, \"/HRhB3mu/ppqW5fb4KLsmcUqFvE=\", false, function () {\n  return [useStyles];\n});\n\n_c = PeopleList;\nexport default PeopleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"sources":["/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/DashBoardM/components/PeopleList/PeopleList.js"],"names":["React","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Paper","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Formik","Field","ErrorMessage","Form","api","useStyles","table","minWidth","PeopleList","classes","open","setOpen","hours","setHours","email","name","newHours","staff","setStaff","staffList","manager","setManager","managerList","getManager","type","getAllManagerRes","getAllManagers","status","data","error","response","getStaff","getAllStaffRes","getAllStaffs","console","log","handleEdit","row","staffEmail","currentHours","limitHours","fullName","handleClose","initialValues","hour","handleChange","map","mobile","address"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-sequences */\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as api from \"../../../Util/api\";\nimport \"./PeopleList.css\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst PeopleList = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const [hours, setHours] = useState({\n    email: \"\",\n    name: \"\",\n    newHours: \"\",\n  });\n\n  const [staff, setStaff] = useState({\n    staffList: [],\n  });\n\n  const [manager, setManager] = useState({\n    managerList: [],\n  });\n\n  const getManager = async () => {\n    const type = \"manager\";\n    try {\n      const getAllManagerRes = await api.getAllManagers(type);\n      if (getAllManagerRes.status === 200) {\n        setManager({\n          managerList: getAllManagerRes.data,\n        });\n      }\n    } catch (error) {\n      if (error.response.status === 404) {\n        setManager({\n          managerList: [],\n        });\n      }\n    }\n    // setManager({\n    //   managerList:\n    //   [{\n    //     fullName: 'manager1',\n    //     email: 'manager1@gmail.com',\n    //     mobile: '0451172301'\n    //   }, {\n    //     fullName: 'manager2',\n    //     email: 'manager2@gmail.com',\n    //     mobile: '0451172301'\n    //   }]\n    // })\n  };\n\n  const getStaff = async () => {\n    const getAllStaffRes = await api.getAllStaffs();\n\n    if (getAllStaffRes.status === 200) {\n      console.log(getAllStaffRes.data);\n      setStaff({\n        staffList: getAllStaffRes.data,\n      });\n    } else {\n      setStaff({ staffList: [] });\n    }\n\n    //   setStaff({\n    //     staffList:\n    //     // [{\n    //     //   fullName: 'staff1',\n    //     //   limitHours: \"40\",\n    //     //   email: 'staff1@gmail.com',\n    //     //   mobile: '0451172301',\n    //     //   address: '102 box st'\n    //     // }, {\n    //     //   fullName: 'staff2',\n    //     //   limitHours: \"50\",\n    //     //   email: 'staff2@gmail.com',\n    //     //   mobile: '0451172301',\n    //     //   address: '102 box st'\n    //     // }]\n    //   })\n  };\n\n  useEffect(() => {\n    getManager(), getStaff();\n  }, []);\n\n  const { staffList } = staff;\n  const { managerList } = manager;\n\n  const handleEdit = (row) => {\n    const staffEmail = row.email;\n    const currentHours = row.limitHours;\n    const fullName = row.fullName;\n    setOpen(true);\n    setHours({\n      email: staffEmail,\n      name: fullName,\n      newHours: currentHours,\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const initialValues = {\n    hour: \"\",\n  };\n\n  const handleChange = async ({ hour }) => {\n    setOpen(false);\n    const email = hours.email;\n    console.log(email, hour);\n    // try {\n    //   const changeHoursRes = await api.changeHours({ email, hour });\n    //   if (changeHoursRes.status === 200) {\n    // console.log(\"change success\");\n    //   }\n    // } catch (error) {\n\n    // }\n  };\n  return (\n    <div className=\"list\">\n      <div className=\"title\">Manager</div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Full Name</TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">Mobile Number</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {managerList.map((row) => (\n              <TableRow key={row.fullName}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.fullName}\n                </TableCell>\n                <TableCell align=\"right\">{row.email}</TableCell>\n                <TableCell align=\"right\">{row.mobile}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div className=\"title\">Staff</div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Full Name</TableCell>\n              <TableCell align=\"right\">Limit Hours</TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">Phone Number</TableCell>\n              <TableCell align=\"right\">Home Address</TableCell>\n              <TableCell align=\"right\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {staffList.map((row) => (\n              <TableRow key={row.fullName}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.fullName}\n                </TableCell>\n                <TableCell align=\"right\">{row.limitHours}</TableCell>\n                <TableCell align=\"right\">{row.email}</TableCell>\n                <TableCell align=\"right\">{row.mobile}</TableCell>\n                <TableCell align=\"right\">{row.address}</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handleEdit(row)}\n                  >\n                    Edit Limit Hours\n                  </Button>\n                  <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                  >\n                    <DialogTitle id=\"form-dialog-title\">\n                      Change working Hours\n                    </DialogTitle>\n                    <DialogContent>\n                      <DialogContentText>\n                        {hours.name}'s current weekly working time is{\" \"}\n                        {hours.newHours} hours.\n                      </DialogContentText>\n                      <Formik\n                        initialValues={initialValues}\n                        onSubmit={handleChange}\n                      >\n                        <Form>\n                          <Field\n                            as={TextField}\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"hour\"\n                            name=\"hour\"\n                            label=\"Limit Working Hours\"\n                            fullWidth\n                          />\n                          <DialogActions>\n                            <Button onClick={handleClose} color=\"primary\">\n                              Cancel\n                            </Button>\n                            <Button type=\"submit\" color=\"primary\">\n                              Save Change\n                            </Button>\n                          </DialogActions>\n                        </Form>\n                      </Formik>\n                    </DialogContent>\n                  </Dialog>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default PeopleList;\n"]},"metadata":{},"sourceType":"module"}