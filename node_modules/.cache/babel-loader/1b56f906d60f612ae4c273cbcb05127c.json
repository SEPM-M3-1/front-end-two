{"ast":null,"code":"var _jsxFileName = \"/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/SignUpS/SignUpS.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport * as api from \"../Util/api\";\nimport \"./SignUpS.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpS = () => {\n  _s();\n\n  const history = useHistory();\n  const [warning, setWarning] = useState(false);\n  const initialValues = {\n    email: \"\",\n    fullName: \"\",\n    password: \"\",\n    mobile: \"\",\n    address: \"\",\n    workingHours: \"\",\n    preferredName: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Please enter valid email\").required(\"Email Required!\"),\n    fullName: Yup.string().required(\"FullName Required!\"),\n    password: Yup.string().required(\"Password Required!\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"),\n    mobile: Yup.string().required(\"Mobile Required!\"),\n    address: Yup.string().required(\"Address Required!\"),\n    workingHours: Yup.string().required(\"Limits for working hours per week Required!\")\n  });\n\n  const onSubmit = async ({\n    email,\n    fullName,\n    password,\n    mobile,\n    address,\n    workingHours,\n    preferredName\n  }) => {\n    console.log(email, fullName, password, mobile, address, workingHours, preferredName);\n\n    try {\n      const signupRes = await api.siguns({\n        email,\n        fullName,\n        password,\n        mobile,\n        address,\n        workingHours,\n        preferredName\n      });\n\n      if (signupRes.status === 200) {\n        history.push(\"\");\n      }\n    } catch (error) {\n      if (error.response.status === 400) {\n        setWarning(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup_form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        display: \"block\"\n      },\n      children: \"Staff SignUp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), warning ? /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Email already exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Email\",\n          name: \"email\",\n          id: \"email\",\n          autoFocus: true,\n          autoComplete: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            style: {\n              display: \"block\"\n            },\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"full-name\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Full-Name\",\n          name: \"fullName\",\n          id: \"fullName\",\n          autoFocus: true,\n          autoComplete: \"fullName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"fullName\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            style: {\n              display: \"block\"\n            },\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Initial Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Password\",\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          autoComplete: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            style: {\n              display: \"block\"\n            },\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mobile\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Mobile Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"mobile number\",\n          id: \"mobile\",\n          type: \"mobile\",\n          name: \"mobile\",\n          autoComplete: \"mobile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"mobile\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            style: {\n              display: \"block\"\n            },\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"preferredName\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Preferred Name(Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Preferred Name\",\n          id: \"preferredName\",\n          type: \"preferredName\",\n          name: \"preferredName\",\n          autoComplete: \"preferredName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"preferredName\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            style: {\n              display: \"block\"\n            },\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Address\",\n          id: \"address\",\n          type: \"address\",\n          name: \"address\",\n          autoComplete: \"address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"address\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            style: {\n              display: \"block\"\n            },\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"workingHours\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Limits for working hours per week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Working Hours\",\n          id: \"workingHours\",\n          type: \"workingHours\",\n          name: \"workingHours\",\n          autoComplete: \"workingHours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"workingHours\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            style: {\n              display: \"block\"\n            },\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          style: {\n            display: \"block\",\n            margin: \"auto\"\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpS, \"qcL9EAae0b6gyMjjNHfVoCv5ZqY=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUpS;\nexport default SignUpS;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpS\");","map":{"version":3,"sources":["/Users/momo/Desktop/SEPM/sprint-two/front-end/src/components/SignUpS/SignUpS.js"],"names":["React","useState","Formik","Field","ErrorMessage","Form","Yup","Link","useHistory","Button","api","SignUpS","history","warning","setWarning","initialValues","email","fullName","password","mobile","address","workingHours","preferredName","validationSchema","object","shape","string","required","matches","onSubmit","console","log","signupRes","siguns","status","push","error","response","display","color","isSubmitting","msg","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport * as api from \"../Util/api\";\nimport \"./SignUpS.css\";\n\nconst SignUpS = () => {\n  const history = useHistory();\n\n  const [warning, setWarning] = useState(false);\n\n  const initialValues = {\n    email: \"\",\n    fullName: \"\",\n    password: \"\",\n    mobile: \"\",\n    address: \"\",\n    workingHours: \"\",\n    preferredName: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string()\n      .email(\"Please enter valid email\")\n      .required(\"Email Required!\"),\n    fullName: Yup.string().required(\"FullName Required!\"),\n    password: Yup.string()\n      .required(\"Password Required!\")\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\n      ),\n    mobile: Yup.string().required(\"Mobile Required!\"),\n    address: Yup.string().required(\"Address Required!\"),\n    workingHours: Yup.string().required(\n      \"Limits for working hours per week Required!\"\n    ),\n  });\n\n  const onSubmit = async ({\n    email,\n    fullName,\n    password,\n    mobile,\n    address,\n    workingHours,\n    preferredName,\n  }) => {\n    console.log(\n      email,\n      fullName,\n      password,\n      mobile,\n      address,\n      workingHours,\n      preferredName\n    );\n    try {\n      const signupRes = await api.siguns({\n        email,\n        fullName,\n        password,\n        mobile,\n        address,\n        workingHours,\n        preferredName,\n      });\n      if (signupRes.status === 200) {\n        history.push(\"\");\n      }\n    } catch (error) {\n      if (error.response.status === 400) {\n        setWarning(true);\n      }\n    }\n  };\n\n  return (\n    <div className=\"signup_form\">\n      <h1 style={{ display: \"block\" }}>Staff SignUp</h1>\n      {warning ? (\n        <span style={{ color: \"red\" }}>Email already exist</span>\n      ) : null}\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <label htmlFor=\"email\" style={{ display: \"block\" }}>\n              Email\n            </label>\n            <Field\n              label=\"Email\"\n              name=\"email\"\n              id=\"email\"\n              autoFocus\n              autoComplete=\"email\"\n            />\n            <ErrorMessage name=\"email\">\n              {(msg) => (\n                <span className=\"error\" style={{ display: \"block\" }}>\n                  {msg}\n                </span>\n              )}\n            </ErrorMessage>\n            <label htmlFor=\"full-name\" style={{ display: \"block\" }}>\n              Full Name\n            </label>\n            <Field\n              label=\"Full-Name\"\n              name=\"fullName\"\n              id=\"fullName\"\n              autoFocus\n              autoComplete=\"fullName\"\n            />\n            <ErrorMessage name=\"fullName\">\n              {(msg) => (\n                <span className=\"error\" style={{ display: \"block\" }}>\n                  {msg}\n                </span>\n              )}\n            </ErrorMessage>\n            <label htmlFor=\"password\" style={{ display: \"block\" }}>\n              Initial Password\n            </label>\n            <Field\n              label=\"Password\"\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"password\"\n            />\n            <ErrorMessage name=\"password\">\n              {(msg) => (\n                <span className=\"error\" style={{ display: \"block\" }}>\n                  {msg}\n                </span>\n              )}\n            </ErrorMessage>\n            <label htmlFor=\"mobile\" style={{ display: \"block\" }}>\n              Mobile Number\n            </label>\n            <Field\n              label=\"mobile number\"\n              id=\"mobile\"\n              type=\"mobile\"\n              name=\"mobile\"\n              autoComplete=\"mobile\"\n            />\n            <ErrorMessage name=\"mobile\">\n              {(msg) => (\n                <span className=\"error\" style={{ display: \"block\" }}>\n                  {msg}\n                </span>\n              )}\n            </ErrorMessage>\n            <label htmlFor=\"preferredName\" style={{ display: \"block\" }}>\n              Preferred Name(Optional)\n            </label>\n            <Field\n              label=\"Preferred Name\"\n              id=\"preferredName\"\n              type=\"preferredName\"\n              name=\"preferredName\"\n              autoComplete=\"preferredName\"\n            />\n            <ErrorMessage name=\"preferredName\">\n              {(msg) => (\n                <span className=\"error\" style={{ display: \"block\" }}>\n                  {msg}\n                </span>\n              )}\n            </ErrorMessage>\n            <label htmlFor=\"address\" style={{ display: \"block\" }}>\n              Address\n            </label>\n            <Field\n              label=\"Address\"\n              id=\"address\"\n              type=\"address\"\n              name=\"address\"\n              autoComplete=\"address\"\n            />\n            <ErrorMessage name=\"address\">\n              {(msg) => (\n                <span className=\"error\" style={{ display: \"block\" }}>\n                  {msg}\n                </span>\n              )}\n            </ErrorMessage>\n            <label htmlFor=\"workingHours\" style={{ display: \"block\" }}>\n              Limits for working hours per week\n            </label>\n            <Field\n              label=\"Working Hours\"\n              id=\"workingHours\"\n              type=\"workingHours\"\n              name=\"workingHours\"\n              autoComplete=\"workingHours\"\n            />\n            <ErrorMessage name=\"workingHours\">\n              {(msg) => (\n                <span className=\"error\" style={{ display: \"block\" }}>\n                  {msg}\n                </span>\n              )}\n            </ErrorMessage>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              disabled={isSubmitting}\n              style={{ display: \"block\", margin: \"auto\" }}\n            >\n              Sign Up\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignUpS;\n"]},"metadata":{},"sourceType":"module"}